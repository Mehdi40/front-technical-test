{"version":3,"file":"static/webpack/static/development/pages/index.js.9e5bcbc8a432b0c80cde.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst LIMIT_PER_PAGE = 20;\nlet ALL_PRODUCTS_LENGTH;\n\nconst Index = props => (\n  <div className=\"IndexPage\">\n    <h1>Products List</h1>\n    <div className=\"ProductsContainer\">\n      {props.products.map(product => (\n        <Link href=\"/product/[id]\" as={`/product/${product.id}`}>\n          <div className=\"ProductThumbnail\">\n            <span className=\"ProductName\">{product.title}</span>\n            <span className=\"ProductPrice\">{product.price}â‚¬</span>\n            <img\n              className=\"ProductImage\"\n              src={product.product_image}\n              alt={`${product.title} image`}\n            />\n          </div>\n        </Link>\n      ))}\n    </div>\n    <div className=\"Pagination\">\n      <span className=\"PreviousPage\">{props.previousPage}</span>\n      <span className=\"CurrentPage\">{props.currentPage}</span>\n      <span className=\"NextPage\">{props.nextPage}</span>\n    </div>\n    <style jsx>{`\n      h1 {\n        font-family: \"Arial\", sans-serif;\n        display: inline-block;\n        width: 100%;\n        text-align: center;\n      }\n\n      .IndexPage {\n        position: relative;\n        width: 100%;\n        height: auto;\n      }\n\n      .ProductsContainer {\n        width: 1200px;\n        height: 1300px;\n        margin: auto;\n      }\n\n      .ProductThumbnail {\n        position: relative;\n        width: 200px;\n        height: 300px;\n        float: left;\n        overflow: hidden;\n        background-color: rgba(0, 0, 0, 0.5);\n        margin: 10px 20px;\n      }\n\n      .ProductName {\n        font-size: 20px;\n        font-family: sans-serif;\n        display: inline-block;\n        width: 100%;\n        text-align: center;\n        top: 20px;\n        position: relative;\n        background-color: rgba(255, 255, 255, 0.75);\n      }\n\n      .ProductPrice {\n        position: absolute;\n        display: inline-block;\n        top: 255px;\n        width: 100%;\n        text-align: center;\n        font-size: 25px;\n        right: 0px;\n        background-color: rgba(255, 255, 255, 0.75);\n      }\n\n      .ProductImage {\n        height: 100%;\n        position: absolute;\n        top: 0px;\n        right: -30px;\n        z-index: -10;\n      }\n\n      ul {\n        padding: 0;\n      }\n\n      li {\n        list-style: none;\n        margin: 5px 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: blue;\n      }\n\n      a:hover {\n        opacity: 0.6;\n      }\n    `}</style>\n  </div>\n);\n\nIndex.getInitialProps = async function({ query }) {\n  if (!ALL_PRODUCTS_LENGTH) {\n    const allProducts = await fetch(\"http://localhost:8080/products\");\n    const dataAllProducts = await allProducts.json();\n    ALL_PRODUCTS_LENGTH = dataAllProducts.length;\n  }\n\n  const products = await fetch(\n    `http://localhost:8080/products?_page=${query.p}&_limit=${LIMIT_PER_PAGE}`\n  );\n  const dataProduct = await products.json();\n\n  const currentPage = parseInt(query.p);\n\n  const previousPage = currentPage - 1 <= 0 ? 0 : currentPage - 1;\n  const nextPage =\n    (currentPage + 1) * LIMIT_PER_PAGE >= ALL_PRODUCTS_LENGTH\n      ? currentPage\n      : currentPage + 1;\n\n  return {\n    totalProducts: ALL_PRODUCTS_LENGTH,\n    products: dataProduct,\n    currentPage: query.p,\n    previousPage: previousPage,\n    nextPage: nextPage\n  };\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AADA;AACA;AAuGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAUA;AAEA;AAEA;AACA;AAfA;AAqBA;AACA;AACA;AACA;AACA;AALA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA4BA;;;;A","sourceRoot":""}